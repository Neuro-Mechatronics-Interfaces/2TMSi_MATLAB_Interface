%DEPLOY__SAGA_INTERFACE2  Script for deploying saga interface, round 2
close all force;
clear;
clc;

try %#ok<TRYNC> 
    timers = timerfindall;
    for ii = 1:numel(timers)
        if timers(ii).Running
            stop(timers(ii));
        end
        delete(timers(ii));
    end
    clear timers;
end

cfg = io.yaml.loadFile(parameters('config'), "ConvertToArray", true);
tag = ["A", "B"];

TIMER_PERIOD = 2; % Seconds

client = struct;
fig = struct;
L = struct;
trigfig = struct;
Ltrig = struct;
uni_snippets = struct;
h_bip = struct;
h_pca = struct;
h_ax_pca = struct;
h_trig = struct;
h_count = struct;
h_ax_sta = struct;
h_sta_mean = struct;
h_sta_var  = struct;
h_sta_title = struct;
h_sta_subtitle = struct;
h_timer = struct;

for iTag = 1:numel(tag)
    n = cfg.SAGA.(tag(iTag)).Channels.n.samples;
    client.(tag(iTag)) = tcpclient( ...
        cfg.Host.visualizer.(tag(iTag)), cfg.TCP.tmsi.visualizer.(tag(iTag)), ...
        "Timeout", n / cfg.Default.Sample_Rate);
    fig.(tag(iTag)) = uifigure(...
        'Name', sprintf('SAGA-%s Viewer',(tag(iTag))), ...
        'Color','w', ...
        'Units', 'inches', ...
        'Position', [0.00 11.25-6.25*(iTag-1) 11.25 6.00], ...
        'Icon', 'outline_live_tv_black_24dp.png',...
        'UserData', struct('tag',tag(iTag))); 
    L.(tag(iTag)) = tiledlayout(fig.(tag(iTag)), 5, 6);
    nexttile(L.(tag(iTag)), 2, [4 4]);
    uni_snippets.(tag(iTag)) = charts.Snippet_Array_8_8_L_Chart( ...
        L.(tag(iTag)), ...
        'RMS_Range', [0 30], ...
        'TriggerBit', cfg.SAGA.(tag(iTag)).Trigger.Bit, ...
        'XData', 1:n, ...
        'YData', zeros(n, 64));
    title(uni_snippets.(tag(iTag)), sprintf('Array-%s', tag(iTag)),'FontName','Tahoma','Color','k');

    h_bip.(tag(iTag)) = gobjects(1,4);
    for ii = 1:4
        ax = nexttile(L.(tag(iTag)), 6*ii, [1 1]);
        set(ax,'NextPlot','add','XColor','none','YColor','none');
        h_bip.(tag(iTag))(ii) = plot( ax, nan(1,n), nan(1,n), ...
            'Color', ones(1,3).*0.1.*(ii-1)+0.3.*iTag);
        title(ax,sprintf('BIP-%s%02d',tag(iTag),ii),'Color','k','FontName','Tahoma');
    end

    h_pca.(tag(iTag)) = gobjects(1,5);
    h_ax_pca.(tag(iTag)) = gobjects(1,5);
    for ii = 1:5
        h_ax_pca.(tag(iTag))(ii) = nexttile(L.(tag(iTag)), 6*(ii-1)+1, [1 1]);
        set(h_ax_pca.(tag(iTag))(ii),'NextPlot','add','XColor','none','YColor','none');
        h_pca.(tag(iTag))(ii) = plot( h_ax_pca.(tag(iTag))(ii), nan(1,n), nan(1,n), ...
            'Color', ([0.8 0.2 0.2]) .* 0.9.^ii);
        title(h_ax_pca.(tag(iTag))(ii),sprintf('PC-%02d',ii),'Color','k','FontName','Tahoma');
    end

    ax = nexttile(L.(tag(iTag)), 26, [1, 4]);
    set(ax,'NextPlot','add','XColor','k','YColor','none');
    h_count.(tag(iTag)) = plot(ax, 1:n, zeros(1,n),'Color','m',...
        'MarkerIndices',1,'Marker','s','MarkerFaceColor','k','LineWidth',1.25);
    title(ax,'Time (s)','FontName','Tahoma','Color','m');

    ax = nexttile(L.(tag(iTag)), 30, [1, 1]);
    set(ax,'NextPlot','add','XColor','none','YColor','none');
    h_trig.(tag(iTag)) = plot(ax, 1:(n*6), zeros(1,n*6), 'Color', 'b', 'LineWidth', 1.25);
    title(ax, 'Triggers','FontName','Tahoma','Color','b');

    trigfig.(tag(iTag)) = uifigure(...
        'Name', sprintf('SAGA-%s Stim-TAs',(tag(iTag))), ...
        'Color','w', ...
        'Units', 'inches', ...
        'Position', [0.25 11.00-6.25*(iTag-1) 11.25 6.00], ...
        'Icon', 'outline_live_tv_black_24dp.png',...
        'UserData', struct('tag',tag(iTag))); 
    Ltrig.(tag(iTag)) = tiledlayout(trigfig.(tag(iTag)), 5, 6);
    h_ax_sta.(tag(iTag)) = nexttile(Ltrig.(tag(iTag)), 1, [5 6]);
    set(h_ax_sta.(tag(iTag)),'NextPlot','add', ...
        'XColor','k','YColor','k','FontName','Tahoma', ...
        'XLimMode', 'manual', 'XLim', [-10 30]);
    % TODO: Add in another thing to set the total number of samples around
    % each trigger that are plotted. 
    % TODO: Add the mean and average updating part.
    h_sta_var.(tag(iTag)) = patch(h_ax_sta.(tag(iTag)), 'Faces', [1:322, 1], 'Vertices', [([-10:0.25:30, 30:-0.25:-10])', zeros(322,1)], 'EdgeColor', 'none', 'FaceColor', [0.6 0.6 0.6], 'DisplayName', 'STA \pm1 S.D.');
    h_sta_mean.(tag(iTag)) = plot(h_ax_sta.(tag(iTag)), -10:0.25:30, zeros(1,161), 'Color', 'k', 'LineWidth', 1.5, 'DisplayName', 'STA Mean');
    h_sta_title.(tag(iTag)) = title(h_ax_sta.(tag(iTag)), 'Channel: UNI-01', 'FontName', 'Tahoma', 'Color', 'k');
    h_sta_subtitle.(tag(iTag)) = subtitle(h_ax_sta.(tag(iTag)), '(N = 0)', 'FontName', 'Tahoma', 'Color', [0.25 0.25 0.25]);
    xlabel(h_ax_sta.(tag(iTag)), 'Time (ms)', 'FontName', 'Tahoma', 'Color', 'k');
    ylabel(h_ax_sta.(tag(iTag)), 'Amplitude (mV)', 'FontName', 'Tahoma', 'Color', 'k');

    client.(tag(iTag)).UserData = struct(...
        'L',L.(tag(iTag)), ...
        'channels', struct('iTrig', 69, 'iCount', 70), ...
        'sample_data', [], ...
        'verbose',cfg.Verbosity.visualizer.(tag(iTag)),...
        'n', struct('channels', ...
                    cfg.SAGA.(tag(iTag)).Channels.n.byte_stream_channels, ...
                    'samples', n, ...
                    'max_samples', n*12, ...
                    'min_pc_samples', n*6),...
        'pca', struct('coeff', [], 'mu', [], 'explained', [], 'proj', []), ...
        'h_ax_pca', h_ax_pca.(tag(iTag)), ...
        'flags', struct('pcs_ready', false, 'pcs_synchronized', false),...
        'thresh', ones(1,68) .* cfg.Default.MUAP_Threshold, ...
        'udp', udpport("LocalHost","127.0.0.1","LocalPort",cfg.UDP.tmsi.visualizer.(tag(iTag))), ...
        'tx', struct('muaps', struct('host', cfg.Host.muaps, 'port', cfg.UDP.tmsi.muaps)), ...
        'logger', mlog.Logger(sprintf('DEBUG_SAGA_%s', tag(iTag)), fullfile(pwd, 'logs')), ...
        'tag',tag(iTag));
    client.(tag(iTag)).configureCallback("terminator", @handle_tmsi_acq_stream);
    client.(tag(iTag)).UserData.udp.configureCallback("terminator", @handle_visualizer_messages);
    client.(tag(iTag)).UserData.udp.UserData = struct(...
        'uni_snippets', uni_snippets.(tag(iTag)), ...
        'channel', 1, ...
        'n_max', 30, ...
        'n_pre', 40, ...
        'n_post', 120, ...
        'n', 0, ...
        'trigger_bit', cfg.SAGA.(tag(iTag)).Trigger.Bit, ...
        'data', zeros(30, 40 + 120 + 1, 68), ...
        'ax', h_ax_sta.(tag(iTag)), ...
        'title', h_sta_title.(tag(iTag)), ...
        'subtitle', h_sta_subtitle.(tag(iTag)), ...
        'h_mean', h_sta_mean.(tag(iTag)), ...
        'h_var', h_sta_var.(tag(iTag)));

    h_timer.(tag(iTag)) = timer('Name',sprintf('SAGA-%s-Viewer-Timer',tag(iTag)), ...
        'BusyMode','queue', ...
        'ExecutionMode','fixedRate',...
        'Period',TIMER_PERIOD);
    h_timer.(tag(iTag)).UserData = struct( ...
        'uni_snippets',uni_snippets.(tag(iTag)), ...
        'h_bip',h_bip.(tag(iTag)), ...
        'h_trig', h_trig.(tag(iTag)), ...
        'h_count', h_count.(tag(iTag)), ...
        'h_pca', h_pca.(tag(iTag)), ...
        'h_ax_sta', h_ax_sta.(tag(iTag)), ...
        'client', client.(tag(iTag)), ...
        'n_samples_refresh', n*8, ...
        'fs', cfg.Default.Sample_Rate, ...
        'tag', tag(iTag));
    h_timer.(tag(iTag)).TimerFcn = @handle_tmsi_viewer_refresh;
    fig.(tag(iTag)).UserData.timer = h_timer.(tag(iTag));
    fig.(tag(iTag)).UserData.trigfig = trigfig.(tag(iTag));
    fig.(tag(iTag)).DeleteFcn = @handle_figure_timer_destruction;
    start(h_timer.(tag(iTag)));
end

for iTag = 1:numel(tag)
    waitfor(fig.(tag(iTag)));
end
 
clear all;