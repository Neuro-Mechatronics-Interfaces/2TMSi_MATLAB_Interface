%EXAMPLE__TMSI_DATA_SERVICE  Create and run the data server.


BROADCAST_ADDRESS = "10.0.0.255";
SERVER_ADDRESS = "10.0.0.128";
UDP_STATE_BROADCAST_PORT = 3030;    % UDP port: state
UDP_NAME_BROADCAST_PORT = 3031;     % UDP port: name
UDP_EXTRA_BROADCAST_PORT = 3032;    % UDP port: extra
UDP_DATA_BROADCAST_PORT  = 3034;    % UDP port: data
UDP_CONTROLLER_RECV_PORT = 3035;    % UDP port: receiver (controller)
SERVER_PORT_CONTROLLER = 5000;          % Server port for CONTROLLER
SERVER_PORT_DATA      = struct;
SERVER_PORT_DATA.A    = 5020;           % Server port for DATA from SAGA-A
SERVER_PORT_DATA.B    = 5021;           % Server port for DATA from SAGA-B
DEFAULT_DATA_SHARE = "R:\NMLShare\raw_data\primate";
DEFAULT_SUBJ = "Test";
N_SAMPLES_LOOP_BUFFER = 16384;

%% Channels configuration struct
channels = struct('A', struct('CREF', 1,  'UNI', 2:65, 'BIP', 66:69, 'TRIG', 70, 'STAT', 71, 'COUNT', 72, 'n', struct('channels', 72, 'samples', N_SAMPLES_LOOP_BUFFER)), ...
                  'B', struct('CREF', 1,  'UNI', 2:65, 'BIP', 66:69, 'TRIG', 70, 'STAT', 71, 'COUNT', 72, 'n', struct('channels', 72, 'samples', N_SAMPLES_LOOP_BUFFER)));

%% Create TMSi DATA server for SAGA-A
if exist('serv__data_A', 'var')~=0
    if ~iscell(serv__data_A)
        delete(serv__data_A);
    end
    clear serv__data_A;
end
fig_A = figure('Name', 'SAGA-A', 'Color', 'w', 'Position', [1200 1000 560 420]);
ax_A = axes(fig_A, "NextPlot", 'add', "FontName", 'Tahoma');
lab_A = title(ax_A, "SAGA-A::x", "FontName", 'Tahoma', "Color", 'k');
line_A = line(ax_A, 'XData', [], 'YData', [], 'LineWidth', 1.5, 'Color', 'k');
serv__data_A = tcpserver(SERVER_ADDRESS, SERVER_PORT_DATA.A, ...
    "ConnectionChangedFcn", @server__DATA_connection_changed_cb);
serv__data_A.UserData = struct(...
    'fig', fig_A, ...
    'ax', ax_A, ...
    'lab', lab_A, ...
    'lab_expr', 'SAGA-A::%s', ...
    'line', line_A, ...
    'data', [], ...
    'n', channels.A.n, ...
    'channels', channels.A, ...
    'last_set', [nan, nan], ...
    'tag', "A");
n_bytes_A = 8*channels.A.n.samples*channels.A.n.channels;
configureCallback(serv__data_A, "byte", n_bytes_A, ...
    @(src, evt)server__DATA_read_data_cb(src, evt));


%% Create TMSi DATA server for SAGA-B
if exist('serv__data_B', 'var')~=0
    if ~iscell(serv__data_B)
        delete(serv__data_B);
    end
    clear serv__data_B;
end
fig_B = figure('Name', 'SAGA-B', 'Color', 'w', 'Position', [1200 475 560 420]);
ax_B = axes(fig_B, "NextPlot", 'add', "FontName", 'Tahoma');
lab_B = title(ax_B, "SAGA-B::x", "FontName", 'Tahoma', "Color", 'k');
line_B = line(ax_B, 'XData', [], 'YData', [], 'LineWidth', 1.5, 'Color', 'k');
serv__data_B = tcpserver(SERVER_ADDRESS, SERVER_PORT_DATA.B, ...
    "ConnectionChangedFcn", @server__DATA_connection_changed_cb);
serv__data_B.UserData = struct(...
    'fig', fig_B, ...
    'ax', ax_B, ...
    'lab', lab_B, ...
    'lab_expr', 'SAGA-B::%s', ...
    'line', line_B, ...
    'data', [], ...
    'n', channels.B.n, ...
    'channels', channels.B, ...
    'last_set', [nan nan], ...
    'tag', "B");
n_bytes_B = 8*channels.B.n.samples*channels.B.n.channels;
configureCallback(serv__data_B, "byte", n_bytes_B, ...
    @(src, evt)server__DATA_read_data_cb(src, evt));